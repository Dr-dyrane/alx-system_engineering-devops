#!/usr/bin/env bash
###############################################################################
# 2-setup_a_domain_name.sh
#
# Description: This Bash script configures a domain name and DNS records to
# point to a specified IP address.
#
# Author: Alexander Udeogaranya
# GitHub: 
#  - https://github.com/Dr-dyrane/alx-system_engineering-devops/0x0C-web_server
#
# Usage: ./2-setup_a_domain_name.sh DOMAIN_NAME SERVER_IP
#
# Requirements:
#   - DOMAIN_NAME: The root domain name (example: foobar.tech).
#   - SERVER_IP: The IP address of the web-01 server.
#   - The script should be run on a machine with DNS configuration privileges.
#
# Example:
#   $ ./2-setup_a_domain_name.sh myschool.tech 100.24.236.109
#
# The script will configure the domain name's DNS records with an A entry
# pointing to the specified SERVER_IP.
###############################################################################

# Check if all required parameters are provided
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 DOMAIN_NAME SERVER_IP"
    exit 1
fi

# Assign parameters to variables
domain_name="$1"
server_ip="$2"

# Configure DNS records with an A entry
cat > /etc/nginx/sites-available/"$domain_name" <<EOF
server {
    listen 80;
    server_name www.$domain_name $domain_name;

    location / {
        proxy_pass http://$server_ip;
    }
}
EOF

# Reload Nginx to apply the new configuration
service nginx reload

echo "DNS records for $domain_name configured to point to $server_ip."
